pipeline {
    agent {
        label 'AGENT-1'
    }
    options{
        timeout(time: 30,unit: 'MINUTES')
        disableConcurrentBuilds ()
        ansiColor('xterm')
    }
    parameters {
            choice(name: 'ACTION',choices: ['APPLY','DESTROY'], description: 'Select Action')
    }
    stages {
        stage('Init and Plan') { 
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
                     sh """
                        cd 00-vpc
                        terraform init -reconfigure
                        terraform plan -out=tfplan
                    """
                }
            }
        }
    
        stage('Apply or Destroy') { 
            // input {
            //     message "Should we continue to ${params.ACTION}"
            //     ok "Yes, we should."
            // } 
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
                    sh """
                        cd 00-vpc
                        if [ ${parms.Action} == 'apply' ]
                        then
                            terraform apply -auto-approve tfplan
                        elif [ ${parms.ACTION} == 'destroy']
                        then
                            terraform destroy -auto-approve
                        fi
                     """
                }
            }
        }
        stage ('Trigger SG') {
            when {
                expression { params.ACTION == 'apply' }
            }
            steps{
                build job: '10-sg', parameters: [string(name: 'ACTION', value: "apply")] 
            }
        }
    }  
        
post {
    always{
        echo 'This sections runs always'
        deleteDir() 
    }
    success{
        echo 'This section runs when pipeline success'
    }
    failure{
        echo 'This section runs when pipline failure'
    }
   }
 } 