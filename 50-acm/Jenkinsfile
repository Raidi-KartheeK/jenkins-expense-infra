pipeline {
    agent { label 'AGENT-1' }
    options{
        timeout(time: 30,unit: 'MINUTES')
        disableConcurrentBuilds ()
        ansiColor('xterm')
    }
    parameters {
        choice(name: 'Action', choices: ['apply', 'destroy'], description: 'Select the action ')
    }
    environment {
        AWS_REGION = 'us-east-1'
        AWS_CREDENTIALS = 'aws-credentials'
        EXPENSE_DIR = '50-acm'
    }
    stages {
        stage('Init and Plan') { 
            steps {
                script {
                    withAWS(region: AWS_REGION, credentials: AWS_CREDENTIALS ) {
                        sh """
                            cd ${EXPENSE_DIR}
                            terraform init -reconfigure
                            terraform plan -out=tfplan
                        """
                    }
                }
            }
        }
        stage('Apply/Destroy') { 
            steps {
                script {
                    withAWS(region: AWS_REGION, credentials: AWS_CREDENTIALS ) {
                        
                            def action = params.Action == 'apply' ? "apply" : "destroy -auto-approve"
                            sh "cd ${EXPENSE_DIR} && terraform ${action} ${action == 'apply' ? 'tfplan' : ''}"      
                                                   
                    }
                }
            }
        }       
       
    }  
        
post {
    always{
        echo 'This sections runs always'
        deleteDir() 
    }
    success{
        echo 'This section runs when pipeline success'
    }
    failure{
        echo 'This section runs when pipline failure'
        }
    }
}


 // sh """
 //     cd EXPENSE_DIR
 //     if [ ${params.Action} == 'APPLY']
 //     then
 //         terraform apply -auto-approve tfplan
 //     elif [ ${params.Action} == 'DESTROY']
 //     then
 //         terraform destroy -auto-approve
 //     fi
 // """ 
 
 
 // stage ('Trigger SG') {
        //     when {
        //         expression { params.Action == 'apply' }
        //     }
        //     steps{
        //         build job: '10-sg', 
        //         parameters: [string(name: 'Action', value: params.Action)],
        //         wait: false 
        //         // Ensures that if SG fails, VPC does not fail
        //         // wait true means if sg fails vpc also fails
        //     }
        // }